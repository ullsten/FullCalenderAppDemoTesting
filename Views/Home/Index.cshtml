<!DOCTYPE html>
<html lang='en'>
<head>
    <meta charset='utf-8' />

    <script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js'></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js'></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js'></script>

    <!-- Add these lines -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap-datepicker@latest/dist/js/bootstrap-datepicker.min.js" crossorigin="anonymous"></script>
    <script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js'></script>
    <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css' />

    <script>

        document.addEventListener('DOMContentLoaded', function () {

            var events = []; //store fetch events
            var selectedEvent = null; //variable to store selected event

            function getEvents() {
                return {
                    url: 'Home/GetEvents',
                    failure: function () {
                        alert('failed to retrieve events. please try again later');
                    }
                };
            }

            function saveEvents(selectedEvent) {
                // Get the new start and end dates of the event
                var newStart = selectedEvent.start;
                var newEnd = selectedEvent.end;

                console.log("start: " + newStart)
                console.log("end: " + newEnd)
                console.log("dropID: " + selectedEvent.extendedProps.eventId)

                // Update the event in the database
                return $.ajax({
                    type: 'POST',
                    url: 'Home/SaveEvent',
                    data: {
                        eventId: selectedEvent.extendedProps.eventId,
                        start: newStart.toISOString(),
                        end: newEnd.toISOString(),
                    },
                    //dataType: 'json', // Add this line to specify the expected data type
                });
            }


            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {

                contentHeight: 500,
                timeZone: 'Europe/Stockholm',
                locale: 'sv', // Set the locale to Swedish

                initialView: 'dayGridMonth',
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay',
                },
                buttonText: {
                    prev: 'Föregående',
                    next: 'Nästa',
                    today: 'Idag',
                    month: 'Månad',
                    week: 'Vecka',
                    day: 'Dag',
                },

                //set default color for event (bordercolor ?)
                eventColor: 'green',
                eventTextColor: 'black',
                eventBorderColor: 'yellow',
                eventDisplay: 'auto',

                //set color for event from value in database
                eventDidMount: function (info) {
                    // Get the event object
                    var event = info.event;

                    // Set the background color for the event using the themeColor property
                    event.setProp('backgroundColor', event.extendedProps.themeColor);
                },

                editable: true, // Allow events to be dragged and resized

                eventDrop: function (dropInfo) {
                    console.log('Dropped Event ID:', dropInfo.event.extendedProps.eventId);
                    console.log('Dropped title: ' + dropInfo.event.title);
                    console.log('Dropped start: ' + dropInfo.event.start);
                    console.log('Dropped end: ' + dropInfo.event.end);
                    console.log('Dropped event: ' + dropInfo.event.extendedProps.themeColor);
                    console.log('All day: ' + dropInfo.event.extendedProps.isFullDay);

                    // Update the start and end dates of the event
                    dropInfo.event.setStart(dropInfo.event.start);
                    dropInfo.event.setEnd(dropInfo.event.end);

                    // Alert showing all event properties
                    alert(
                        "Title: " + dropInfo.event.title + "\n" +
                        "New start: " + dropInfo.event.start.toISOString() + "\n" +
                        "New end: " + dropInfo.event.end.toISOString() + ".\n" +
                        "ID: " + dropInfo.event.extendedProps.eventId + "\n" +
                        "Description: " + dropInfo.event.extendedProps.description + "\n" +
                        "Theme Color: " + dropInfo.event.extendedProps.themeColor + "\n" + 
                        "All day: " + dropInfo.event.extendedProps.isFullDay
                    );

                    if (!confirm("Are you sure about this change?")) {
                        // Revert the event to its original position
                        dropInfo.revert();
                    } else {
                        // Make an AJAX request to update the event on the server
                        $.ajax({
                            url: 'home/SaveEvent', // Replace with your server-side action URL
                            type: 'POST',
                            data: JSON.stringify(dropInfo.event), // Send the event object as JSON data
                            contentType: 'application/json',
                            success: function (response) {
                                // Handle the response from the server if needed
                                // For example, you can show a success message to the user
                                alert('Event successfully updated.');
                            },
                            error: function () {
                                // Handle the error if the AJAX request fails
                                // For example, you can show an error message to the user
                                alert('Failed to update event. Please try again later.');
                                // Revert the event to its original position
                                dropInfo.revert();
                            }
                        });
                    }
                },

                selectable: true, // Enable date selection
                events: getEvents(), // get events for database

                // Handle date selection for clicked date
                select: function (info) {
                    // Get the selected start and end dates
                    var start = moment(info.start).format('YYYY-MM-DDTHH:mm:ss');
                    var end = moment(info.end).format('YYYY-MM-DDTHH:mm:ss');
                    
                    // Set the start and end dates in the event creation form
                    document.getElementById('start').value = start;
                    document.getElementById('end').value = end;

                    // Show the event creation modal
                    $('#CreateEventModal').modal('show');

                    console.log(end);
                },

                eventClick: function (info) {
                    // Get the clicked event
                    selectedEvent = info.event;

                    console.log("ID:" + selectedEvent.extendedProps.eventId);
                    console.log(info.event);

                    // Create a div element to display the event details
                    var eventDetails = document.createElement('div');
                    eventDetails.innerHTML = `
                          <p><strong>Subject:</strong> ${selectedEvent.title}</p>
                          <p><strong>Description:</strong> ${selectedEvent.extendedProps.description}</p>
                          <p><strong>Start:</strong> ${moment(selectedEvent.start).format('YYYY-MM-DD HH:mm')}</p>
                          <p><strong>End:</strong> ${moment(selectedEvent.end).format('YYYY-MM-DD HH:mm')}</p>
                    `;

                    // Show the event details in the modal
                    var eventModalBody = document.getElementById('eventModalBody');
                    eventModalBody.innerHTML = '';
                    eventModalBody.appendChild(eventDetails);

                    // show clicked event
                    $('#eventModalDetail').modal('show');

                    // Click event handler for the edit event button
                    $('#editButton').click(function () {

                        //get selected event properties
                        var eventId = selectedEvent.extendedProps.eventId;
                        var eventTitle = selectedEvent.title;
                        var eventDescription = selectedEvent.extendedProps.description;
                        var eventStart = moment(selectedEvent.start).format('YYYY-MM-DDTHH:mm:ss');
                        var eventEnd = moment(selectedEvent.end).format('YYYY-MM-DDTHH:mm:ss');
                        var eventColor = selectedEvent.extendedProps.themeColor;

                        $('#editEventId').val(eventId);
                        $('#editSubject').val(eventTitle);
                        $('#editDescription').val(eventDescription);
                        $('#editStart').val(eventStart);
                        $('#editEnd').val(eventEnd);
                        $('#editThemeColor').val(eventColor);

                        $('#editEventModal').modal('show');
                        $('#eventModalDetail').modal('hide');

                        console.log("EditID: " + eventId);
                    });

                    // Click event handler for the deleteEvent button
                    $('#deleteEvent').click(function () {

                        if (selectedEvent != null && confirm('Are you sure you want to delete this event?')) {

                            $.ajax({
                                type: 'POST',
                                url: 'Home/DeleteEvent', // Replace with the actual URL to delete the event on the server
                                data: {
                                    eventId: selectedEvent.extendedProps.eventId // Pass the event ID to delete
                                },
                                success: function (data) {
                                    if (data.status) {
                                        $('#eventModalDetail').modal('hide');
                                    }
                                    // Handle success response, if needed
                                    // Reload the events after successful deletion, you can use 'calendar.refetchEvents()' or other appropriate methods.
                                    calendar.refetchEvents();
                                    alert('Event successfully deleted.')

                                },
                                error: function () {
                                    alert('Failed to delete event. Please try again later.');
                                }
                            });
                        }
                    });

                },

            });
            // Handle the checkbox change event
            $('#isFullDay').change(function () {
                if ($(this).is(':checked')) {
                    // Checkbox is checked, hide the end date form
                    $('#endDateForm').hide();
                    // Set isFullDay to true
                    $('#isFullDay').val(true);
                    // Set the "End" date to the value of the "Start" date
                    var startDateValue = $('#start').val();
                    $('#end').val(startDateValue);
                } else {
                    // Checkbox is unchecked, show the end date form
                    $('#endDateForm').show();
                    // Set isFullDay to false
                    $('#isFullDay').val(false);
                }
            });



            // Render calendar
            calendar.render();

        });

    </script>
</head>
<body>

    @*Display calandar*@
    <div id='calendar'></div>

    <!-- Modal for event details with buttons -->
    <div class="modal fade" id="eventModalDetail" tabindex="-1" role="dialog" aria-labelledby="eventModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="eventModalLabel">Event Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                        @*<span aria-hidden="true">&times;</span>*@
                    </button>
                </div>
                <div class="modal-body" id="eventModalBody">
                    <!-- Event details will be displayed here -->
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" id="editButton">Edit</button>
                    <button class="btn btn-danger" id="deleteEvent">Delete</button>
                    <button class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    @***********************Event create modal*****************************@
    <div class="modal fade" id="CreateEventModal" tabindex="-1" aria-labelledby="eventModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="eventModalLabel">Create Event</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @*Json action*@
                    @*action="Home/SaveEvent"*@
                    @*asp-action="Create" asp-controller="Events""*@

                    <form id="createEventForm" method="post" action="Home/SaveEvent">
                        <div class="form-group">
                            <input class="form-control" type="text" id="title" name="Subject" placeholder="Subject" required />
                        </div>
                        <div class="form-group mt-2">
                            <label for="start">Start</label>
                            <input class="form-control" type="datetime-local" id="start" name="Start" required />
                        </div>

                        <div class="form-group mt-2">
                            <input class="form-check-input" type="checkbox" id="isFullDay" name="IsFullDay" /> Full day
                        </div>

                        <div class="form-group" id="endDateForm">
                            <label for="start">End</label>
                            <input class="form-control" type="dateTime-local" id="end" name="End" />
                        </div>

                        <div class="form-group mt-2">
                            <label for="Description">Description</label>
                            <textarea id="Description" name="Description" class="form-control"></textarea>
                        </div>

                        <div class="form-group mt-2">
                            <label for="ThemeColor">Color</label>
                            <input class="form-control" type="text" id="themeColor" name="ThemeColor" placeholder="Color" />
                        </div>

                        <div class="form-group mt-2">
                            <input class="btn btn-primary" type="submit" value="Create Event" />
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    @**************Edit modal*********************@
    <div class="modal fade" id="editEventModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editModalLabel">Edit Event</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">

                    @*method="post" action="Home/UpdateEvent"*@
                    <form id="editEventForm" method="post" action="Home/UpdateEvent">
                        @*<form id="editEventForm" method="post" action-action="Edit" asp-controller="Events">*@
                        <input type="hidden" id="editEventId" name="EventId" />
                        <div class="form-group">
                            <label for="editSubject">Subject</label>
                            <input type="text" id="editSubject" name="Subject" class="form-control" required />
                        </div>
                        <div class="form-group">
                            <label for="editDescription">Description</label>
                            <textarea id="editDescription" name="Description" class="form-control"></textarea>
                        </div>
                        <div class="form-group">
                            <label for="editStart">Start</label>
                            <input type="datetime-local" id="editStart" name="Start" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label for="editEnd">End</label>
                            <input type="datetime-local" id="editEnd" name="End" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label for="editThemeColor">Theme Color</label>
                            <input type="text" id="editThemeColor" name="ThemeColor" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label for="editIsFullDay">Is Full Day</label>
                            <input type="checkbox" id="editIsFullDay" name="IsFullDay" class="form-check-input" />
                        </div>
                        <input type="submit" value="Save Changes" class="btn btn-primary" id="saveChangesBtn" />
                    </form>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
