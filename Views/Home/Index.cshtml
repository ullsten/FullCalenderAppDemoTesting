<!DOCTYPE html>
<html lang='en'>
<head>
    <meta charset='utf-8' />

    <script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js'></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js'></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js'></script>

    <!-- Add these lines -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap-datepicker@latest/dist/js/bootstrap-datepicker.min.js" crossorigin="anonymous"></script>
    <script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js'></script>
    <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css' />

    <script>

        document.addEventListener('DOMContentLoaded', function () {

            //var events = []; //store fetch events
            //var selectedEvent = null; //variable to store selected event

            //get events from database
            function getEvents() {
                return {
                    url: 'Home/GetEvents',
                    failure: function () {
                        alert('Failed to retrieve events. Please try again later.');
                    },
                    eventDataTransform: function (eventData) {
                        // Modify the event data here
                        eventData.backgroundColor = eventData.themeColor; // set backgroundColor for event from database

                        return eventData;
                    }
                };
            }
            //Save or update event
            function saveEvents(selectedEvent) {
                // Get the new start and end dates of the event
                var newStart = selectedEvent.start;
                var newEnd = selectedEvent.end;

                console.log("start: " + newStart)
                console.log("end: " + newEnd)
                console.log("dropID: " + selectedEvent.extendedProps.eventId)

                // Update the event in the database
                return $.ajax({
                    type: 'POST',
                    url: 'Home/SaveEvent',
                    data: {
                        eventId: selectedEvent.extendedProps.eventId,
                        start: newStart.toISOString(),
                        end: newEnd.toISOString(),
                    },
                    //dataType: 'json', // Add this line to specify the expected data type
                });
            }

            //Delete event
            function deleteEvent(eventId) {
                $.ajax({
                    type: 'POST',
                    url: 'Home/DeleteEvent',
                    data: {
                        eventId: eventId
                    },
                    success: function (data) {
                        if (data.status) {
                            $('#eventDetailModal').modal('hide');
                        }
                        calendar.refetchEvents();
                        alert('Event successfully deleted.');
                    },
                    error: function () {
                        alert('Failed to delete event. Please try again later.');
                    }
                });
            }

            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {

                //contentHeight: 200,
                timeZone: 'UTC',
                locale: 'sv', // Set the locale to Swedish

                initialView: 'dayGridMonth',
                //initialView: 'multiMonthYear',
                //multiMonthMaxColumns: 2, // force a single column
                
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay',
                },
                buttonText: {
                    prev: 'Föregående',
                    next: 'Nästa',
                    today: 'Idag',
                    month: 'Månad',
                    week: 'Vecka',
                    day: 'Dag',
                },

                //set default color for event (bordercolor ?)
                //eventColor: 'green',
                //eventTextColor: 'black',
                //eventBorderColor: 'yellow',
                eventDisplay: 'auto',
                displayEventTime: false,
                dayMaxEvents: true, // when too many events in a day, show the popover  
                editable: true, // Allow events to be dragged and resized
                selectable: true, // Enable date selection

                events: getEvents(), // get events for database to calendar

                // Handle date selection for clicked date
                select: function (info) {
                    // Get the selected start and end dates
                    var start = moment(info.start).format('YYYY-MM-DDTHH:mm:ss');
                    var end = moment(info.end).format('YYYY-MM-DDTHH:mm:ss');
                    
                    // Set the start and end dates in the event creation form
                    document.getElementById('start').value = start;
                    document.getElementById('end').value = end;

                    // Show the event creation modal
                    $('#CreateEventModal').modal('show');

                    console.log(end);
                },

                eventDrop: function (dropInfo) {
                    // Retrieve the necessary data from the event
                    var eventId = dropInfo.event.extendedProps.eventId;
                    var newStart = dropInfo.event.start;
                    var newEnd = dropInfo.event.end;

                    // Other properties of the event
                    var subject = dropInfo.event.title;
                    var description = dropInfo.event.extendedProps.description;
                    var isFullDay = dropInfo.event.extendedProps.isFullDay;
                    var themeColor = dropInfo.event.backgroundColor;

                    console.log(eventId);
                    console.log(newStart);
                    console.log(newEnd);
                    console.log(subject);
                    console.log(description);
                    console.log(isFullDay);
                    console.log(themeColor);
                    
                    // Show the confirmation alert to the user
                    if (!confirm("Are you sure about this change?")) {
                        // Revert the event to its original position
                        dropInfo.revert();
                    } else {
                        // Make an AJAX request to update the event on the server
                        $.ajax({
                            url: 'Home/SaveEvent', // server-side action URL
                            type: 'POST',
                            data: {
                                eventId: eventId,
                                Subject: subject,
                                Description: description,
                                IsFullDay: isFullDay,
                                ThemeColor: themeColor,
                                Start: newStart.toISOString(),
                                End: newEnd.toISOString(),
                            },
                            success: function (response) {
                                //console.log('AJAX Success:', response);
                                // Handle the response from the server if needed
                                // For example, you can show a success message to the user
                                alert('Event dates successfully updated.' + newStart + newEnd);
                            },
                            error: function () {
                                console.log('AJAX Error');
                                // Handle the error if the AJAX request fails
                                // For example, you can show an error message to the user
                                alert('Failed to update event. Please try again later.');
                                // Revert the event to its original position
                                dropInfo.revert();
                            }
                        });
                    }
                },

                eventClick: function (info) {
                    // Get the clicked event
                    selectedEvent = info.event;

                    console.log("ID:" + selectedEvent.extendedProps.eventId);
                    console.log(info.event);

                    // Create a div element to display the event details
                    var eventDetails = document.createElement('div');
                    eventDetails.innerHTML = `
                        <p><strong>Subject:</strong> ${selectedEvent.title}</p>
                        <p><strong>Description:</strong> ${selectedEvent.extendedProps.description}</p>
                        <p><strong>Start:</strong> ${moment(selectedEvent.start).format('YYYY-MM-DD:mm:ss')}</p>
                                        <p><strong>End:</strong> ${selectedEvent.extendedProps.isFullDay ? moment(selectedEvent.start).format('YYYY-MM-DD:mm:ss') : moment(selectedEvent.end).format('YYYY-MM-DD:mm:ss')}</p>
                    `;

                    // Show the event details in the modal
                    var eventModalBody = document.getElementById('eventModalBody');
                    eventModalBody.innerHTML = '';
                    eventModalBody.appendChild(eventDetails);

                    // show clicked event
                    $('#eventDetailModal').modal('show');

                    // Click event handler for the edit event button
                    $('#editButton').click(function () {
                        // Get selected event properties
                        var eventId = selectedEvent.extendedProps.eventId;
                        var eventTitle = selectedEvent.title;
                        var eventDescription = selectedEvent.extendedProps.description;
                        var eventStart = moment(selectedEvent.start).format('YYYY-MM-DDTHH:mm:ss');
                        var eventEnd = moment(selectedEvent.end).format('YYYY-MM-DDTHH:mm:ss');
                        var eventColor = selectedEvent.extendedProps.themeColor;
                        var isFullDay = selectedEvent.extendedProps.isFullDay; // Get the isFullDay property

                        // Set form values with selected event properties
                        $('#editEventId').val(eventId);
                        $('#editSubject').val(eventTitle);
                        $('#editDescription').val(eventDescription);
                        $('#editStart').val(eventStart);
                        $('#editEnd').val(eventEnd);
                        $('#editThemeColor').val(eventColor); // Set the default color in the dropdown

                        // Set the editIsFullDay checkbox based on the isFullDay property
                        $('#editIsFullDay').prop('checked', isFullDay);


                        if(isFullDay){
                            $('#editEndDateForm').hide();
                        }else{
                            $('#editEndDateForm').show();
                            $('#editEnd').val(eventEnd);
                        }
                        // Show the edit event modal
                        $('#editEventModal').modal('show');
                        $('#eventDetailModal').modal('hide');

                        console.log("EditID: " + eventId);
                    });

                    // Click event handler for the deleteEvent button
                    $('#deleteEvent').click(function () {
                        if (selectedEvent != null && confirm('Are you sure you want to delete this event?')) {
                            deleteEvent(selectedEvent.extendedProps.eventId);
                        }
                    });
                },

            });

            // Handle the checkbox change event
            $('#isFullDay, #editIsFullDay').change(function () {
                if ($(this).is(':checked')) {
                    // Checkbox is checked, hide the end date form
                    $('#endDateForm, #editEndDateForm').hide();
                    // Set isFullDay to true
                    $('#isFullDay, #editIsFullDay').val(true);
                    // Set the "End" date to the value of the "Start" date
                    var startDateValue = $('#start').val();
                    $('#end, #editEnd').val(startDateValue);
                    // Set editEnd to editStart
                    $('#editEnd').val($('#editStart').val());
                } else {
                    // Checkbox is unchecked, show the end date form
                    $('#endDateForm, #editEndDateForm').show();
                    // Set isFullDay to false
                    $('#isFullDay, #editIsFullDay').val(false);
                }
            });

            // Render calendar
            calendar.render();
        });

    </script>
</head>
<body>

    @*Display calandar*@
    <div id='calendar'></div>

    <!-- Modal for event details with buttons -->
    <div class="modal fade" id="eventDetailModal" tabindex="-1" role="dialog" aria-labelledby="eventModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="eventModalLabel">Event Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                        @*<span aria-hidden="true">&times;</span>*@
                    </button>
                </div>
                <div class="modal-body" id="eventModalBody">
                    <!-- Event details will be displayed here -->
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" id="editButton">Edit</button>
                    <button class="btn btn-danger" id="deleteEvent">Delete</button>
                    <button class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    @***********************Event create modal*****************************@
    <div class="modal fade" id="CreateEventModal" tabindex="-1" aria-labelledby="eventModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="eventModalLabel">Create Event</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @*Json action*@
                    @*action="Home/SaveEvent"*@
                    @*asp-action="Create" asp-controller="Events""*@

                    <form id="createEventForm" method="post" action="Home/SaveEvent">
                        <div class="form-group">
                            <input class="form-control" type="text" id="title" name="Subject" placeholder="Subject" required />
                        </div>
                        <div class="form-group mt-2">
                            <label for="start" class="control-label">Start</label>
                            <input class="form-control" type="datetime-local" id="start" name="Start" required />
                        </div>

                        <div class="form-group mt-2">
                            <input class="form-check-input" type="checkbox" id="isFullDay" name="IsFullDay" /> Full day
                        </div>

                        <div class="form-group" id="endDateForm">
                            <label for="start">End</label>
                            <input class="form-control" type="dateTime-local" id="end" name="End" />
                        </div>

                        <div class="form-group mt-2">
                            <label for="Description">Description</label>
                            <textarea id="Description" name="Description" class="form-control"></textarea>
                        </div>
                        <div class="form-group mt-2">
                            <label for="ThemeColor">Color</label>
                            <select class="form-control" id="themeColor" name="ThemeColor">
                                <option value="">Select a color</option>
                                <option value="red">Red</option>
                                <option value="blue">Blue</option>
                                <option value="green">Green</option>
                                <option value="yellow">Yellow</option>
                                <option value="orange">Orange</option>
                                <option value="purple">Purple</option>
                                <option value="pink">Pink</option>
                                <option value="brown">Brown</option>
                                <option value="teal">Teal</option>
                                <option value="indigo">Indigo</option>
                                <!-- Add more color options as needed -->
                            </select>
                        </div>
                        <div class="form-group mt-2">
                            <input class="btn btn-primary" type="submit" value="Create Event" />
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal for editing event -->
    <div class="modal fade" id="editEventModal" tabindex="-1" role="dialog" aria-labelledby="editEventModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editEventModalLabel">Edit Event</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="editEventForm" method="post" action="Home/SaveEvent">
                        <input type="hidden" id="editEventId" name="EventId" />
                        <div class="form-group">
                            <input class="form-control" type="text" id="editSubject" name="Subject" placeholder="Subject" required />
                        </div>
                        <div class="form-group mt-2">
                            <label for="editStart">Start</label>
                            <input class="form-control" type="datetime-local" id="editStart" name="Start" required />
                        </div>

                        <div class="form-group mt-2">
                            <input class="form-check-input" type="checkbox" id="editIsFullDay" name="IsFullDay" /> Full day
                        </div>

                        <div class="form-group" id="editEndDateForm">
                            <label for="editEnd">End</label>
                            <input class="form-control" type="dateTime-local" id="editEnd" name="End" />
                        </div>

                        <div class="form-group mt-2">
                            <label for="editDescription">Description</label>
                            <textarea id="editDescription" name="Description" class="form-control"></textarea>
                        </div>

                        <div class="form-group mt-2">
                            <label for="editThemeColor">Color</label>
                            <select class="form-control" id="editThemeColor" name="ThemeColor">
                                <option value="">Select a color</option>
                                <option value="red">Red</option>
                                <option value="blue">Blue</option>
                                <option value="green">Green</option>
                                <option value="yellow">Yellow</option>
                                <option value="orange">Orange</option>
                                <option value="purple">Purple</option>
                                <option value="pink">Pink</option>
                                <option value="brown">Brown</option>
                                <option value="teal">Teal</option>
                                <option value="indigo">Indigo</option>
                                <!-- Add more color options as needed -->
                            </select>
                        </div>

                        <div class="form-group mt-2">
                            <input class="btn btn-primary" type="submit" value="Save Changes" />
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

</body>
</html>
