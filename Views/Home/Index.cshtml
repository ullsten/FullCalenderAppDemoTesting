<!DOCTYPE html>
<html lang='en'>
<head>
    <meta charset='utf-8' />
    <title>Calendar</title>

    <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css' />
    <link rel="stylesheet" href="~/css/customStyle.css">

    <script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js'></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js'></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js'></script>
    <script src='https://cdn.jsdelivr.net/npm/bootstrap-datepicker@latest/dist/js/bootstrap-datepicker.min.js' crossorigin="anonymous"></script>
    <script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js'></script>

    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />

    <style>
        /* Custom styles... */
    </style>

   @* <script>
        document.addEventListener('DOMContentLoaded', function () {
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                // Calendar options...

                //contentHeight: 200,
                timeZone: 'UTC',
                locale: 'sv', // Set the locale to Swedish

                initialView: 'dayGridMonth',
                //initialView: 'multiMonthYear',
                //multiMonthMaxColumns: 2, // force a single column

                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay',
                },
                buttonText: {
                    prev: 'Föregående',
                    next: 'Nästa',
                    today: 'Idag',
                    month: 'Månad',
                    week: 'Vecka',
                    day: 'Dag',
                },

                //set default color for event (bordercolor ?)
                //eventColor: 'green',
                //eventTextColor: 'black',
                //eventBorderColor: 'yellow',
                eventDisplay: 'auto',
                displayEventTime: false,
                dayMaxEvents: true, // when too many events in a day, show the popover
                editable: true, // Allow events to be dragged and resized
                selectable: true, // Enable date selection

                events: getEvents(), // get events for database to calendar
            });

            // Function to get events from the database
            function getEvents() {
                return {
                    url: 'Home/GetEvents',
                    failure: function () {
                        alert('Failed to retrieve events. Please try again later.');
                    },
                    eventDataTransform: function (eventData) {
                        // Modify the event data here
                        eventData.backgroundColor = eventData.themeColor; // set backgroundColor for event from the database
                        return eventData;
                    }
                };
            }

            // Function to save or update an event
            function saveEvent(eventId, subject, description, isFullDay, themeColor, start, end) {
                $.ajax({
                    url: 'Home/SaveEvent',
                    type: 'POST',
                    data: {
                        eventId: eventId,
                        Subject: subject,
                        Description: description,
                        IsFullDay: isFullDay,
                        ThemeColor: themeColor,
                        Start: start.toISOString(),
                        End: end.toISOString(),
                    },
                    success: function (response) {
                        $('#modalTitle').text('Success');
                        $('#modalBody').text('Event dates successfully updated.');
                        $('#myModal').modal('show');
                    },
                    error: function () {
                        console.log('AJAX Error');
                        $('#modalTitle').text('Error');
                        $('#modalBody').text('Failed to update event. Please try again later.');
                        $('#myModal').modal('show');
                    }
                });
            }

            // Function to delete an event
            function deleteEvent(eventId) {
                $.ajax({
                    type: 'POST',
                    url: 'Home/DeleteEvent',
                    data: {
                        eventId: eventId
                    },
                    success: function (data) {
                        if (data.status) {
                            $('#eventDetailModal').modal('hide');
                        }
                        calendar.refetchEvents();
                        alert('Event successfully deleted.');
                    },
                    error: function () {
                        alert('Failed to delete event. Please try again later.');
                    }
                });
            }

            // Event Handlers...
            calendar.on('select', function (info) {
                var start = moment(info.start).format('YYYY-MM-DDTHH:mm:ss');
                var end = moment(info.end).format('YYYY-MM-DDTHH:mm:ss');
                document.getElementById('start').value = start;
                document.getElementById('end').value = end;
                $('#CreateEventModal').modal('show');
            });

            calendar.on('eventDrop', function (dropInfo) {
                var eventId = dropInfo.event.extendedProps.eventId;
                var newStart = dropInfo.event.start;
                var newEnd = dropInfo.event.end;
                var subject = dropInfo.event.title;
                var description = dropInfo.event.extendedProps.description;
                var isFullDay = dropInfo.event.extendedProps.isFullDay;
                var themeColor = dropInfo.event.backgroundColor;

                if (typeof eventId === 'undefined' || eventId === null) {
                    alert('Event ID is undefined or null.');
                    return;
                } else if (!confirm("Are you sure about this change?")) {
                    dropInfo.revert();
                } else {
                    saveEvent(eventId, subject, description, isFullDay, themeColor, newStart, newEnd);
                }
            });

            calendar.on('eventClick', function (info) {
                var selectedEvent = info.event;
                var eventDetails = document.createElement('div');
                eventDetails.innerHTML = `
                            <p><strong>Subject:</strong> ${selectedEvent.title}</p>
                            <p><strong>Description:</strong> ${selectedEvent.extendedProps.description}</p>
                            <p><strong>Start:</strong> ${moment(selectedEvent.start).format('YYYY-MM-DD:mm:ss')}</p>
                            <p><strong>End:</strong> ${selectedEvent.extendedProps.isFullDay ? moment(selectedEvent.start).format('YYYY-MM-DD:mm:ss') : moment(selectedEvent.end).format('YYYY-MM-DD:mm:ss')}</p>
                        `;

                var eventModalBody = document.getElementById('eventModalBody');
                eventModalBody.innerHTML = '';
                eventModalBody.appendChild(eventDetails);

                $('#eventDetailModal').modal('show');

                $('#editButton').click(function () {
                    var eventId = selectedEvent.extendedProps.eventId;
                    var eventTitle = selectedEvent.title;
                    var eventDescription = selectedEvent.extendedProps.description;
                    var eventStart = moment(selectedEvent.start).format('YYYY-MM-DDTHH:mm:ss');
                    var eventEnd = moment(selectedEvent.end).format('YYYY-MM-DDTHH:mm:ss');
                    var eventColor = selectedEvent.extendedProps.themeColor;
                    var isFullDay = selectedEvent.extendedProps.isFullDay;

                    $('#editEventId').val(eventId);
                    $('#editSubject').val(eventTitle);
                    $('#editDescription').val(eventDescription);
                    $('#editStart').val(eventStart);
                    $('#editEnd').val(eventEnd);
                    $('#editThemeColor').val(eventColor);
                    $('#editIsFullDay').prop('checked', isFullDay);

                    if (isFullDay) {
                        $('#editEndDateForm').hide();
                    } else {
                        $('#editEndDateForm').show();
                        $('#editEnd').val(eventEnd);
                    }

                    $('#editEventModal').modal('show');
                    $('#eventDetailModal').modal('hide');
                });

                $('#deleteEvent').click(function () {
                    if (selectedEvent != null && confirm('Are you sure you want to delete this event?')) {
                        deleteEvent(selectedEvent.extendedProps.eventId);
                    }
                });
            });

            // Checkbox Change Event Handler...
            $('#isFullDay, #editIsFullDay').change(function () {
                if ($(this).is(':checked')) {
                    $('#endDateForm, #editEndDateForm').hide();
                    $('#isFullDay, #editIsFullDay').val(true);
                    var startDateValue = $('#start').val();
                    $('#end, #editEnd').val(startDateValue);
                } else {
                    $('#endDateForm, #editEndDateForm').show();
                    $('#isFullDay, #editIsFullDay').val(false);
                }
            });

            // Render the calendar
            calendar.render();
        });
    </script>*@
    
</head>
<body>
    <script src="js/calendarScript.js"></script>
    <div class="calendar">
    @*Display calandar*@
        <div id='calendar'></div>

    <!-- Modal for event details with buttons -->
    <div class="modal fade" id="eventDetailModal" tabindex="-1" role="dialog" aria-labelledby="eventModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="eventModalLabel">Event Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                        @*<span aria-hidden="true">&times;</span>*@
                    </button>
                </div>
                <div class="modal-body" id="eventModalBody">
                    <!-- Event details will be displayed here -->
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" id="editButton">Edit</button>
                    <button class="btn btn-danger" id="deleteEvent">Delete</button>
                    <button class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    @***********************Event create modal*****************************@
    <div class="modal fade" id="CreateEventModal" tabindex="-1" aria-labelledby="eventModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="eventModalLabel">Create Event</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @*Json action*@
                    @*action="Home/SaveEvent"*@
                    @*asp-action="Create" asp-controller="Events""*@

                    <form id="createEventForm" method="post" action="Home/SaveEvent">
                        <div class="form-group">
                            <input class="form-control" type="text" id="title" name="Subject" placeholder="Subject" required />
                        </div>
                        <div class="form-group mt-2">
                            <label for="start" class="control-label">Start</label>
                            <input class="form-control" type="datetime-local" id="start" name="Start" required />
                        </div>

                        <div class="form-group mt-2">
                            <input class="form-check-input" type="checkbox" id="isFullDay" name="IsFullDay" /> Full day
                        </div>

                        <div class="form-group" id="endDateForm">
                            <label for="start">End</label>
                            <input class="form-control" type="dateTime-local" id="end" name="End" />
                        </div>

                        <div class="form-group mt-2">
                            <label for="Description">Description</label>
                            <textarea id="Description" name="Description" class="form-control"></textarea>
                        </div>

                            <div class="form-group mt-2">
                                <label for="ThemeColor">Color</label>
                                <select class="form-control" id="themeColor" name="ThemeColor">
                                    <option value="">Select a color</option>
                                    @foreach (var colorOption in ViewBag.ColorsList)
                                    {
                                        <option value="@colorOption.Value">@colorOption.Text</option>
                                    }
                                </select>
                            </div>

                        <div class="form-group mt-2">
                            <input class="btn btn-primary" type="submit" value="Create Event" />
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal for editing event -->
    <div class="modal fade" id="editEventModal" tabindex="-1" role="dialog" aria-labelledby="editEventModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editEventModalLabel">Edit Event</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="editEventForm" method="post" action="Home/SaveEvent">
                        <input type="hidden" id="editEventId" name="EventId" />
                        <div class="form-group">
                            <input class="form-control" type="text" id="editSubject" name="Subject" placeholder="Subject" required />
                        </div>
                        <div class="form-group mt-2">
                            <label for="editStart">Start</label>
                            <input class="form-control" type="datetime-local" id="editStart" name="Start" required />
                        </div>

                        <div class="form-group mt-2">
                            <input class="form-check-input" type="checkbox" id="editIsFullDay" name="IsFullDay" /> Full day
                        </div>

                        <div class="form-group" id="editEndDateForm">
                            <label for="editEnd">End</label>
                            <input class="form-control" type="dateTime-local" id="editEnd" name="End" />
                        </div>

                        <div class="form-group mt-2">
                            <label for="editDescription">Description</label>
                            <textarea id="editDescription" name="Description" class="form-control"></textarea>
                        </div>

                        <div class="form-group mt-2">
                            <label for="editThemeColor">Color</label>
                            <select class="form-control" id="editThemeColor" name="ThemeColor">
                                    <option value="">Select a color</option>
                                    @foreach (var colorOption in ViewBag.ColorsList)
                                    {
                                        <option value="@colorOption.Value">@colorOption.Text</option>
                                    }
                                </select>
                        </div>

                        <div class="form-group mt-2">
                            <input class="btn btn-primary" type="submit" value="Save Changes" />
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

        <!-- Modal -->
        <div id="myModal" class="modal fade" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="modalTitle"></h5>
                        <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body" id="modalBody">
                        <p></p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-bs-dismiss="modal">OK</button>
                    </div>
                </div>
            </div>
        </div>

    </div>
    
</body>
</html>
